{% extends 'layout.html.twig' %}

{% block breadcrumps %}
    <a href="{{ path('homepage') }}"><i class="material-icons">home</i></a> <i class="material-icons">chevron_right</i>
    <a href="{{ path('admin') }}"><i class="material-icons">tune</i>admin</a> <i class="material-icons">chevron_right</i>
    <a href="{{ path('period') }}"><i class="material-icons">date_range</i>Semaine type</a> <i class="material-icons">chevron_right</i>
    <i class="material-icons">date_range</i>exceptions
{% endblock %}

{% block content %}
    <h4 class="">Exceptions</h4>

    <table class="responsive-table striped">
        <thead>
        <tr>
            <th>Id</th>
            <th>Date de début</th>
            <th>Date de fin</th>
            <th>Type</th>
            <th>Périodicité</th>
            <th>Raison</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
            {% for exception in exceptions %}
                <tr>
                    <td>{{ exception.id }}</td>
                    <td>{{ exception.startDate | date('d/m/Y H:i') }}</td>
                    <td>{{ exception.endDate | date('d/m/Y H:i') }}</td>
                    <td>{{ exception.type }}</td>
                    <td>{{ exception.recurrence }}</td>
                    <td>{{ exception.reason.name }}</td>
                    <td><a href="{{ path("period_exception_edit",{'id': exception.id}) }}">Modifier</a></td>
                </tr>
            {% endfor %}
        </tbody>
    </table>


    <h4>Nouvelle exception</h4>
    {{ form_start(form) }}
    {{ form_row(form.type) }}
    {{ form_row(form.recurrence) }}
    {{ form_row(form.job) }}
    {{ form_row(form.formation) }}

    <div class="row">
        <div class="col s6">
            <div class="errors">
                {{ form_errors(form.startDate) }}
            </div>
            <div class="input-field">
                {{ form_label(form.startDate) }}
                {{ form_widget(form.startDate.date, {'attr': {'class': 'datepicker'}}) }}
                {{ form_widget(form.startDate.time, {'attr': {'class': 'timepicker'}}) }}
            </div>
        </div>
        <div class="col s6">
            <div class="errors">
                {{ form_errors(form.endDate) }}
            </div>
            <div class="input-field">
                {{ form_label(form.endDate) }}
                {{ form_widget(form.endDate.date, {'attr': {'class': 'datepicker'}}) }}
                {{ form_widget(form.endDate.time, {'attr': {'class': 'timepicker'}}) }}
            </div>
        </div>
    </div>

    {{ form_rest(form) }}
    <div>
        <button type="submit" class="btn-large waves-effect waves-light">Créer</button>
    </div>
    {{ form_end(form) }}


{% endblock %}
{% block javascripts %}
    <script>
        jQuery.extend( jQuery.fn.pickadate.defaults, {
            monthsFull: [ 'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre' ],
            monthsShort: [ 'Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec' ],
            weekdaysFull: [ 'Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi' ],
            weekdaysShort: [ 'Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam' ],
            today: 'Aujourd\'hui',
            clear: 'Effacer',
            close: 'Fermer',
            firstDay: 1,
            format: 'yyyy-mm-dd',
            formatSubmit: 'yyyy-mm-dd',
            labelMonthNext:"Mois suivant",
            labelMonthPrev:"Mois précédent",
            labelMonthSelect:"Sélectionner un mois",
            labelYearSelect:"Sélectionner une année"
        });

        function typeUpdated(element) {
            if (element.value === 'ADD') {
                $('.add-only').show();
                $('select.add-only').material_select();
                $('select.add-only ').hide();
            } else {
                $('select.add-only').material_select('destroy');
                $('.add-only').hide();
            }
        }

        jQuery(function() {
            // Hide by default add type specific exceptions
            $('select.add-only').material_select('destroy');
            $('.add-only').hide();

            $('.datepicker').pickadate({
                selectMonths: true, // Creates a dropdown to control month
                selectYears: 2, // Creates a dropdown of 15 years to control year,
                close: 'Ok',
                closeOnSelect: true // Close upon selecting a date,
            });

            $('.timepicker').pickatime({
                twelvehour: false, // Use AM/PM or 24-hour format
                donetext: 'OK', // text for done-button
                cleartext: 'Effacer', // text for clear-button
                canceltext: 'Fermer', // Text for cancel-button
                autoclose: true, // automatic close timepicker
                ampmclickable: false, // make AM PM clickable
            });
        });
    </script>
{% endblock %}